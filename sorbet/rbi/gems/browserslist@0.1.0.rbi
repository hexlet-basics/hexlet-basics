# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `browserslist` gem.
# Please instead update this file by running `bin/tapioca gem browserslist`.


# source://browserslist//lib/browserslist/version.rb#3
module Browserslist
  class << self
    # source://browserslist//lib/browserslist.rb#20
    def browsers; end

    # source://browserslist//lib/browserslist.rb#12
    def configuration; end

    # source://browserslist//lib/browserslist.rb#16
    def configure(&block); end

    # source://browserslist//lib/browserslist.rb#24
    def generate(options = T.unsafe(nil)); end
  end
end

# source://browserslist//lib/browserslist/browsers.rb#6
class Browserslist::Browsers
  # source://browserslist//lib/browserslist/browsers.rb#18
  def file_contents; end

  # source://browserslist//lib/browserslist/browsers.rb#11
  def parse(content = T.unsafe(nil)); end

  private

  # source://browserslist//lib/browserslist/browsers.rb#54
  def add_missing_browsers_if_strict(result); end

  # source://browserslist//lib/browserslist/browsers.rb#83
  def extract_min_version(version_string); end

  # source://browserslist//lib/browserslist/browsers.rb#66
  def normalize_browser_name(browser); end

  # source://browserslist//lib/browserslist/browsers.rb#31
  def parse_content(file_content); end

  class << self
    # source://browserslist//lib/browserslist/browsers.rb#7
    def parse(content = T.unsafe(nil)); end
  end
end

# source://browserslist//lib/browserslist/cli.rb#6
class Browserslist::Cli
  # @return [Cli] a new instance of Cli
  #
  # source://browserslist//lib/browserslist/cli.rb#7
  def initialize(argv); end

  # source://browserslist//lib/browserslist/cli.rb#12
  def run; end

  private

  # source://browserslist//lib/browserslist/cli.rb#63
  def browsers_command; end

  # source://browserslist//lib/browserslist/cli.rb#55
  def generate_command; end

  # source://browserslist//lib/browserslist/cli.rb#32
  def parser; end
end

# source://browserslist//lib/browserslist/configuration.rb#4
class Browserslist::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://browserslist//lib/browserslist/configuration.rb#9
  def initialize; end

  # Returns the value of attribute file_path.
  #
  # source://browserslist//lib/browserslist/configuration.rb#7
  def file_path; end

  # Sets the attribute file_path
  #
  # @param value the value to set the attribute file_path to.
  #
  # source://browserslist//lib/browserslist/configuration.rb#7
  def file_path=(_arg0); end

  # Returns the value of attribute strict.
  #
  # source://browserslist//lib/browserslist/configuration.rb#7
  def strict; end

  # Sets the attribute strict
  #
  # @param value the value to set the attribute strict to.
  #
  # source://browserslist//lib/browserslist/configuration.rb#7
  def strict=(_arg0); end

  class << self
    # @yield [instance]
    #
    # source://browserslist//lib/browserslist/configuration.rb#18
    def configure; end

    # source://browserslist//lib/browserslist/configuration.rb#14
    def instance; end
  end
end

# source://browserslist//lib/browserslist/configuration.rb#5
Browserslist::Configuration::DEFAULT_FILE_PATH = T.let(T.unsafe(nil), String)

# source://browserslist//lib/browserslist.rb#10
class Browserslist::Error < ::StandardError; end

# source://browserslist//lib/browserslist/generator.rb#6
class Browserslist::Generator
  # source://browserslist//lib/browserslist/generator.rb#11
  def generate(options = T.unsafe(nil)); end

  private

  # @raise [Error]
  #
  # source://browserslist//lib/browserslist/generator.rb#37
  def check_npx_availability!; end

  # source://browserslist//lib/browserslist/generator.rb#22
  def fetch_browserslist_data(query = T.unsafe(nil)); end

  class << self
    # source://browserslist//lib/browserslist/generator.rb#7
    def generate(options = T.unsafe(nil)); end
  end
end

# source://browserslist//lib/browserslist/version.rb#4
Browserslist::VERSION = T.let(T.unsafe(nil), String)
