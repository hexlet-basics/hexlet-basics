# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bcrypt_pbkdf` gem.
# Please instead update this file by running `bin/tapioca gem bcrypt_pbkdf`.


# source://bcrypt_pbkdf//lib/bcrypt_pbkdf.rb#8
module BCryptPbkdf
  class << self
    # generates a key from a password + salt returning a string with keylen bytes
    # that can be used as cryptographic key.
    #
    # Remember to get a good random salt of at least 16 bytes.  Using a higher
    # rounds count will increase the cost of an exhaustive search but will also
    # make derivation proportionally slower.
    #
    # Example:
    #   rounds = 10
    #   keylen = 64
    #   @key = BCryptPbkdf.key("my secret", "my salt", keylen, rounds)
    #
    # source://bcrypt_pbkdf//lib/bcrypt_pbkdf.rb#20
    def key(pass, salt, keylen, rounds); end
  end
end

class BCryptPbkdf::Engine
  class << self
    def __bc_crypt_hash(_arg0, _arg1); end
    def __bc_crypt_pbkdf(_arg0, _arg1, _arg2, _arg3); end
  end
end
