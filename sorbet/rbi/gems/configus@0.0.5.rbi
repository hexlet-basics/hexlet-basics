# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `configus` gem.
# Please instead update this file by running `bin/tapioca gem configus`.


# source://configus//lib/configus/version.rb#1
module Configus
  class << self
    # source://configus//lib/configus.rb#9
    def build(env, &block); end

    # source://configus//lib/configus.rb#13
    def config; end
  end
end

# source://configus//lib/configus/builder.rb#2
class Configus::Builder
  # @return [Builder] a new instance of Builder
  #
  # source://configus//lib/configus/builder.rb#11
  def initialize(current_env, block); end

  # source://configus//lib/configus/builder.rb#17
  def result(env = T.unsafe(nil)); end

  private

  # source://configus//lib/configus/builder.rb#50
  def deep_merge(target, source); end

  # @raise [ArgumentError]
  #
  # source://configus//lib/configus/builder.rb#40
  def env(env, options = T.unsafe(nil), &block); end

  class << self
    # source://configus//lib/configus/builder.rb#5
    def build(current_env, &block); end
  end
end

# source://configus//lib/configus/config.rb#4
class Configus::Config
  # @return [Config] a new instance of Config
  #
  # source://configus//lib/configus/config.rb#5
  def initialize(config, section = T.unsafe(nil)); end

  # source://configus//lib/configus/config.rb#27
  def [](key); end

  # source://configus//lib/configus/config.rb#39
  def each_pair(&block); end

  # source://configus//lib/configus/config.rb#44
  def method_missing(meth, *args, &blk); end

  # source://configus//lib/configus/config.rb#31
  def to_hash; end
end

# source://configus//lib/configus/proxy.rb#2
class Configus::Proxy
  # @return [Proxy] a new instance of Proxy
  #
  # source://configus//lib/configus/proxy.rb#12
  def initialize(block); end

  # source://configus//lib/configus/proxy.rb#17
  def method_missing(key, value = T.unsafe(nil), &block); end

  # Returns the value of attribute result.
  #
  # source://configus//lib/configus/proxy.rb#3
  def result; end

  class << self
    # source://configus//lib/configus/proxy.rb#6
    def generate(block); end
  end
end

# source://configus//lib/configus/version.rb#2
Configus::VERSION = T.let(T.unsafe(nil), String)

# source://configus//lib/configus/core_ext/kernel.rb#1
module Kernel
  # source://configus//lib/configus/core_ext/kernel.rb#2
  def configus; end
end
