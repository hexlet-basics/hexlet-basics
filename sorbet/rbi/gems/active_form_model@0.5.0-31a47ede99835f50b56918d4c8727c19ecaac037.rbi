# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `active_form_model` gem.
# Please instead update this file by running `bin/tapioca gem active_form_model`.

module ActiveFormModel
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveFormModel::Permittable

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveFormModel::Permittable::ClassMethods
  mixes_in_class_methods ::ActiveFormModel::ClassMethods

  module GeneratedClassMethods
    def _permitted_args; end
    def _permitted_args=(value); end
  end

  module GeneratedInstanceMethods
    def _permitted_args; end
    def _permitted_args=(value); end
  end
end

module ActiveFormModel::ClassMethods
  # source://active_form_model//lib/active_form_model.rb#18
  def human_attribute_name(*_arg0, **_arg1, &_arg2); end

  # source://active_form_model//lib/active_form_model.rb#17
  def sti_name(*_arg0, **_arg1, &_arg2); end
end

class ActiveFormModel::Error < ::StandardError; end

module ActiveFormModel::Permittable
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveFormModel::Permittable::ClassMethods

  # source://active_form_model//lib/active_form_model/permittable.rb#43
  def assign_attributes(attrs = T.unsafe(nil)); end

  # source://active_form_model//lib/active_form_model/permittable.rb#33
  def update(attrs = T.unsafe(nil)); end

  # source://active_form_model//lib/active_form_model/permittable.rb#38
  def update!(attrs = T.unsafe(nil)); end

  private

  # source://active_form_model//lib/active_form_model/permittable.rb#50
  def permit_attrs(attrs); end

  module GeneratedClassMethods
    def _permitted_args; end
    def _permitted_args=(value); end
  end

  module GeneratedInstanceMethods
    def _permitted_args; end
    def _permitted_args=(value); end
  end
end

module ActiveFormModel::Permittable::ClassMethods
  # source://active_form_model//lib/active_form_model/permittable.rb#28
  def _permit_attrs(attrs); end

  # source://activesupport/7.0.4/lib/active_support/deprecation/method_wrappers.rb#63
  def fields(*args, **_arg1, &block); end

  # source://active_form_model//lib/active_form_model/permittable.rb#15
  def new(attrs = T.unsafe(nil), &block); end

  # source://active_form_model//lib/active_form_model/permittable.rb#21
  def permit(*args); end
end

# source://active_form_model//lib/active_form_model/version.rb#4
ActiveFormModel::VERSION = T.let(T.unsafe(nil), String)

module ActiveFormModel::Virtual
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveFormModel::Permittable
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations
  include ::ActiveModel::Conversion
  include ::ActiveModel::API
  include ::ActiveModel::Model

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveFormModel::Permittable::ClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::ActiveModel::Conversion::ClassMethods
  mixes_in_class_methods ::ActiveFormModel::Virtual::ClassMethods

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _permitted_args; end
    def _permitted_args=(value); end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _permitted_args; end
    def _permitted_args=(value); end
    def _validators; end
    def _validators?; end
  end
end

module ActiveFormModel::Virtual::ClassMethods
  # source://active_form_model//lib/active_form_model/virtual.rb#11
  def fields(*attrs); end
end

module ActiveModel::Model
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations
  include ::ActiveModel::Conversion
  include ::ActiveModel::API

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::ActiveModel::Conversion::ClassMethods

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _validators; end
    def _validators?; end
  end
end
