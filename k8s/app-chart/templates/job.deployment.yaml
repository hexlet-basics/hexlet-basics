---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-job-deployment"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"

spec:
  replicas: 1

  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}-job-pod"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}-job-pod"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
        codebasics/pod: "{{ .Release.Name }}-{{ .Values.version }}-job-pod"
    spec:
      nodeSelector:
        group: "{{ .Release.Namespace }}"

      imagePullSecrets:
        - name: docker-config

      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "codebasics/pod"
                    operator: In
                    values:
                      - "{{ .Release.Name }}-{{ .Values.version }}-web-check-pod"
              topologyKey: "kubernetes.io/hostname"

      volumes:
        - name: users-code-path
          hostPath:
            path: /tmp/hexlet-basics
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: docker-secret
          secret:
            secretName: docker-config
            items:
              - key: .dockerconfigjson
                path: config.json

      containers:
        - name: jobs
          imagePullPolicy: Always
          image: "{{ .Values.app.image.repository }}:{{ .Values.version }}"
          resources:
            requests:
              memory: "300Mi"
              cpu: "10m"
            limits:
              memory: '600Mi'
          command: ["bin/jobs"]
          volumeMounts:
            - mountPath: /tmp/hexlet-basics
              name: users-code-path
            - mountPath: /var/run/docker.sock
              name: docker-sock
            - name: docker-secret
              mountPath: /home/rails/.docker
          envFrom:
            - secretRef:
                name: codebasics-environment-secrets
          env:
            - name: HEXLET_BASICS_RELEASE_VERSION
              value: {{ .Values.version }}
            - name: RAILS_MAX_THREADS
              value: "5"
