---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-web-deployment"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"

spec:
  replicas: 3

  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}-web-pod"
      app.kubernetes.io/instance: "{{ .Release.Name }}"

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}-web-pod"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        helm.sh/chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
        hexlet-basics/web-pod: "{{ .Release.Name }}-{{ .Values.version }}-web-pod"

    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "hexlet-basics/web-pod"
                    operator: In
                    values:
                      - "{{ .Release.Name }}-{{ .Values.version }}-web-pod"
              topologyKey: "kubernetes.io/hostname"

      volumes:
        - name: users-code-path
          hostPath:
            path: /tmp/hexlet-basics
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock

      containers:
        - name: nginx
          imagePullPolicy: Always
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.version }}"
          startupProbe:
            httpGet:
              path: /up
              port: 8080
            periodSeconds: 10
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /up
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 8
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /up
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 3
            failureThreshold: 3
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 100Mi
          env:
            - name: SITEMAPS_S3_HOST
              valueFrom:
                secretKeyRef:
                  name: hexlet-basics-environment-secrets
                  key: SITEMAPS_S3_HOST
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "10"]

        - name: web
          imagePullPolicy: Always
          image: "{{ .Values.web.image.repository }}:{{ .Values.version }}"
          startupProbe:
            httpGet:
              path: /up
              port: 3000
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            periodSeconds: 10
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /up
              port: 3000
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 5
            periodSeconds: 8
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /up
              port: 3000
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 3
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: 400Mi
              cpu: 100m
            limits:
              memory: 1200Mi
          volumeMounts:
            - mountPath: /tmp/hexlet-basics
              name: users-code-path
            - mountPath: /var/run/docker.sock
              name: docker-sock
          envFrom:
            - secretRef:
                name: hexlet-basics-environment-secrets
          env:
            - name: HEXLET_BASICS_RELEASE_VERSION
              value: {{ .Values.version }}
          lifecycle:
            postStart:
              exec:
                command: {{ .Values.slack_notification }}
            preStop:
              exec:
                command: ["sleep", "15"]
