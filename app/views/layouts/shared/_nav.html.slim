.navbar.navbar-expand-md.navbar-light
  .container-fluid
    = link_to root_path, class: 'navbar-brand me-md-4' do
      = image_tag 'logo.png', width: 30, alt: 'Code Basics logo'

    button.navbar-toggler(
      type='button' data-bs-toggle='collapse'
      data-bs-target='#navbarToggler' aria-controls='navbarToggler'
      aria-expanded='false' aria-label=t('.toggle_navigation')
    )
      span.navbar-toggler-icon

    #navbarToggler.collapse.navbar-collapse
      ul.navbar-nav.me-auto
        li.nav-item.dropdown.me-2
          a.nav-link.text-dark.dropdown-toggle href='#' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
            = t('.courses')
          = render 'layouts/shared/language_menu'

        li.nav-item.dropdown.me-2
          a.nav-link.text-dark.dropdown-toggle href='#' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
            = t('.categories')
          ul.dropdown-menu.dropdown-menu-columns.dropdown-menu-arrow
            - @language_categories.each do |category|
              li
                = link_to language_category_path(category.slug), class: 'dropdown-item d-flex align-items-center py-2'
                  span = category

        li.nav-item.dropdown.me-2
            a.nav-link.text-dark.dropdown-toggle href='#' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
              = t('.about_code_basics')
            ul.dropdown-menu
              li.dropdown-item
                = link_to t('.reviews'), reviews_path, class: 'dropdown-item'
              li.dropdown-item
                = link_to t('.about_platform'), page_path(:about), class: 'dropdown-item'
              li.dropdown-item
                = link_to t('.blog'), blog_posts_path, class: 'dropdown-item'
              - if I18n.locale == :ru
                li.nav-item.dropdown-item.me-2
                  / rubocop:disable Rails/LinkToBlank
                  = link_to t('.success_stories'), ExternalLinks.hexlet_success_stories_curl, class: 'dropdown-item text-dark', target: '_blank', rel: 'nofollow noopener'
                  / rubocop:enable Rails/LinkToBlank

      ul.navbar-nav
        - if current_user.guest?
          = nav_menu_item t('.sign_in'), new_session_path
          = nav_menu_item t('.registration'), new_user_path, class: 'me-3'
        - else
          li.nav-item.dropdown.me-2
            a.nav-link.text-dark.dropdown-toggle href='#' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
              span.bi.bi-person-circle
              / = current_user.email
            ul.dropdown-menu.dropdown-menu-end
              li.dropdown-item-text.d-flex.align-items-center
                .flex-shrink-0.me-2
                  = image_tag 'user-avatar.png', width: 50, height: 50, alt: 'User Avatar', class: 'rounded-circle'
                .
                  .fw-bold = current_user.nickname
                  . = current_user.email
              .dropdown-divider
              li = link_to t('.profile'), edit_account_profile_path, class: 'dropdown-item'
              - if current_user.admin?
                .dropdown-divider
                li = link_to t('.admin'), admin_root_path, class: 'dropdown-item'
              .dropdown-divider
              li = link_to t('.sign_out'), session_path, method: :delete, class: 'dropdown-item'
        li.nav-item.dropdown
          a.nav-link.text-dark.dropdown-toggle href='#' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'
            span.me-2 = I18n.locale.upcase
            / image_tag "flag-#{I18n.locale}.svg", width: 25, alt: "switch language to #{I18n.locale}"
          ul.dropdown-menu.dropdown-menu-end
            li
              - I18n.available_locales.without(I18n.locale).each do |locale|
                = link_to switch_locale_path(new_locale: locale), class: 'dropdown-item d-flex', rel: :nofollow do
                  = image_tag "flag-#{locale}.svg", width: 25, alt: "switch language to #{locale}", class: 'my-auto me-2'
                  span.my-auto
                    = t(locale, scope: 'languages')
